{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","src","height","title","type","id","style","onClick","toggleMode","icon","faSun","defaultProps","aboutText","TextForm","useState","text","setText","document","backgroundImage","color","heading","margin","value","placeholder","onChange","event","target","backgroundColor","rows","disabled","length","console","log","newText","toUpperCase","showAlert","toLowerCase","split","join","newtext","replace","getElementById","select","navigator","clipboard","writeText","enc","window","btoa","dec","atob","err","alert","textTosearch","para","pattern","RegExp","innerHTML","textContent","match","filter","element","Alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4fefd95a.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaMoon } from 'react-icons/fa';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\nimport { a } from 'react-router-dom';\n\nexport default function Navbar(props) {\n\n  return (\n    <>\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\"><img src='logo192.png' height={\"40px\"}/></a>\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse mx-4\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-a active\" aria-current=\"page\" href=\"/\" style={{\"text-decoration\":\"none\"}}>Home</a>\n              </li>\n              {/* <li className=\"nav-item\">\n                <a className=\"nav-a active\" to=\"/about\">{props.aboutText}</a>\n              </li> */}\n            </ul>\n            {/* <form className=\"d-flex\">\n              <input className=\"form-control me-2\" id=\"text-search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n              <button className=\"btn btn-outline-success\" type=\"submit\" >Search</button>\n            </form> */}\n            <div className={`button text-${props.mode === 'light' ? 'dark' : 'light'} mx-3`}>\n              <button type=\"button\" onClick={props.toggleMode} className={props.mode === 'light' ? \"btn-secondary btn-sm\" : \"btn-warning btn-sm\"} title={props.mode === 'light' ? 'Switch to dark mode' : 'Switch to light mode'} >{props.mode === 'light' ? <FaMoon /> : <FontAwesomeIcon icon={faSun} />}</button>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  )\n}\n\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n}\n\nNavbar.defaultProps = {\n  title: 'Set title here',\n  aboutText: 'About text here',\n}","import Mark from 'mark.js';\nimport React, { useState } from 'react'\n\n\nexport default function TextForm(props) {\n\n\n\n    const handleUpClick = () => {\n        console.log(\"Uppercase was clicked\");\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\n    }\n    const handlelowerClick = () => {\n        console.log(\"Lowercase was clicked\");\n        let newText = text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\n\n    }\n\n    const handleClear = () => {\n        console.log(\"Clear was clicked\");\n        let newText = \"\";\n        setText(newText);\n        props.showAlert(\"Text cleared!!!\", \"info\");\n\n    }\n\n    const handleOnChange = (event) => {\n        // console.log(\"On change was clicked\");\n        setText(event.target.value);\n    }\n\n    const handleCopy = () => {\n        console.log(\"Copied\");\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to clipboard!!!\", \"success\");\n\n        // alert(\"Copied!!!\");\n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n\n    }\n\n    const Encrypt = () => {\n        var enc = window.btoa(text);\n        var res = enc;\n        setText(res);\n\n        props.showAlert(\"String is Encrypetd!\", \"success\");\n    }\n\n    const Decrypt = () => {\n        try {\n            var dec = window.atob(text);\n            var rest = dec;\n            setText(rest);\n            props.showAlert(\"String is Decrypetd!\", \"success\");\n\n        }\n        catch (err) {\n            alert(\"String is already decoded\");\n        }\n    }\n\n    const handleSearch = () => {\n        let textTosearch = document.getElementById(\"input\").value;\n        let para = document.getElementById(\"prev\");\n        console.log(textTosearch);\n        console.log(para);\n        textTosearch = textTosearch.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        let pattern = new RegExp(`${textTosearch}`, \"gi\");\n        para.innerHTML = para.textContent.replace(pattern, match => `<mark>${match}</mark>`);\n    }\n\n    const handleExtraPunc = () => {\n        // var text = document.getElementById(\"myBox\");\n        let punctuationless = text.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\");\n        let newtext = punctuationless.replace(/\\s{2,}/g, \" \");\n        setText(newtext);\n        props.showAlert(\"Extra punctuations are removed!\", \"success\");\n\n    }\n\n    const handleNewLine = () => {\n        // var text = document.getElementById(\"myBox\");\n        let newtext = text.replace(/(\\r\\n|\\n|\\r)/g, \" \");\n        setText(newtext);\n        props.showAlert(\"ALl new lines are removed!\", \"success\");\n\n    }\n\n\n    // function countWords(str) {\n    //     str = str.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n    //     str = str.replace(/[ ]{2,}/gi, \" \");\n    //     str = str.replace(/\\n /, \"\\n\");\n    //     return str.split(' ').length;\n    // }\n\n    const [text, setText] = useState('', 'Enter text here');\n    document.title = 'TextUtlis - Home';\n\n    return (\n        <div>\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }, { backgroundImage: \"url(/bg1img.jpg)\" }}>\n                <h1 style={{ color: \"white\" }}>{props.heading}</h1>\n                <div className=\"mb-3\" style={{ margin: '1em' }}>\n                    <textarea className=\"form-control\" value={text} placeholder=\"Enter text here\" onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#121212' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"12\"><mark></mark></textarea>\n                </div>\n                <button disabled={text.length === 0} className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={handleUpClick}>Convert to UpperCase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={handlelowerClick}>Convert to LowerCase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={handleExtraPunc}>Remove Punctuations</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={handleNewLine}>Remove New Line</button>\n                <button disabled={text.length === 0} className=\"btn btn-danger\" style={{ margin: '1em' }} onClick={handleClear}>Clear text</button>\n                <button disabled={text.length === 0} className=\"btn btn-outline-success\" style={{ margin: '1em' }} onClick={handleCopy}>Copy</button>\n                <button disabled={text.length === 0} className=\"btn btn-warning\" style={{ margin: '1em' }} onClick={Encrypt}>Encrypt</button>\n                <button disabled={text.length === 0} className=\"btn btn-warning\" style={{ margin: '1em' }} onClick={Decrypt}>Decrypt</button>\n                <div className=\"container\" >\n                    <input type=\"text\" id=\"input\" />\n                    <button disabled={text.length === 0} className=\"btn btn-secondary\" style={{ margin: '1em' }} onClick={handleSearch}>Search</button>\n                </div>\n            </div>\n            <div className=\"container my-5\">\n                <h2>Your text summary</h2>\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\n                <h3>Time: </h3>\n                <p>{0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes read</p>\n                <h2>Preview: </h2>\n                <p id='prev'>{text.length > 0 ? text : \"Enter above to preview here.\"}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize =(word) =>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <div>\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n            </div>\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport React, { useState } from 'react'\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#121212';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled\", \"success\");\n\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" color=\"white\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap-icons/font/bootstrap-icons.json\"\n\n// state = {\n//   search: \"\"\n// };\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}