{"ast":null,"code":"import _slicedToArray from\"/media/gauravd/Drive2/ReactJS/textutils/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useState}from'react';// import About from './components/About';\nimport Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import Alert from'./components/Alert';// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// Whether dark mode is enable or not\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1000);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#121212';document.body.style.color='white';showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';document.body.style.color='black';showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",color:\"white\",aboutText:\"About Us\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text to analyze below\",mode:mode})})]});}export default App;","map":{"version":3,"sources":["/media/gauravd/Drive2/ReactJS/textutils/src/App.js"],"names":["React","useState","Navbar","TextForm","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","color"],"mappings":"8JAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;6IAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAAwBJ,QAAQ,CAAC,OAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eAA2C;AAC3C,eAA0BN,QAAQ,CAAC,IAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,CAAUC,IAAV,CAAmB,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OADE,CAEPC,IAAI,CAAEA,IAFC,CAAD,CAAR,CAIAE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAD,CAAR,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CARD,CASA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIT,IAAI,GAAK,OAAb,CAAsB,CACpBC,OAAO,CAAC,MAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,SAAtC,CACAH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,KAApB,CAA4B,OAA5B,CACAV,SAAS,CAAC,4BAAD,CAA+B,SAA/B,CAAT,CACD,CALD,IAMK,CACHH,OAAO,CAAC,OAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,OAAtC,CACAH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,KAApB,CAA4B,OAA5B,CACAV,SAAS,CAAC,6BAAD,CAAgC,SAAhC,CAAT,CAED,CACF,CAdD,CAiBA,mBACE,wCAEE,KAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,KAAK,CAAC,OAAhC,CAAwC,SAAS,CAAC,UAAlD,CAA6D,IAAI,CAAEJ,IAAnE,CAAyE,UAAU,CAAES,UAArF,EAFF,cAGE,KAAC,KAAD,EAAO,KAAK,CAAEP,KAAd,EAHF,cAIE,YAAK,SAAS,CAAC,gBAAf,uBAME,KAAC,QAAD,EAAU,SAAS,CAAEE,SAArB,CAAgC,OAAO,CAAC,iCAAxC,CAA0E,IAAI,CAAEJ,IAAhF,EANF,EAJF,GADF,CAkBD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react'\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#121212';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled\", \"success\");\n\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" color=\"white\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}